#include "Gobbiarray.h"
#include <cmath>

using namespace std;

Gobbiarray::Gobbiarray(float dist0)
{
  dist = dist0;
  //dist = 138.; // mm target to plane of E detector distance
  b = 8.;// mm beam axis to frame dimension,
  length = 72.37; // length of Si frame
  Dactive = 64.2; // active dimension of Si

                    //xCenter, yCenter, Dactive,       dE-threshold, E-threshold
  Tele[0] = new tele(b+length/2.,length/2.-b,Dactive,     0.2, 0.5);
  Tele[1] = new tele(length/2.-b,-b-length/2.,Dactive,    0.2, 2.0);
  Tele[2] = new tele(-b - length/2.,-length/2.+b,Dactive, 0.2, 0.5);
  Tele[3] = new tele(-length/2.+b,b+length/2.,Dactive,    0.2, 0.5);

  float RadiusCollimator = 38.1/2.; //31.71/2; //mm
  thetaCollimator = atan(RadiusCollimator/(dist-7.));
}
//*********************************************************
Gobbiarray::~Gobbiarray()
{
  delete Tele[0];
  delete Tele[1];
  delete Tele[2];
  delete Tele[3];
}
//**********************************************************
int Gobbiarray::hit(float theta, float phi, float xTarget, float yTarget, float dE, float E)
{
  int ihit = 0;

  if (theta < thetaCollimator) { cout << "hit collimator " << theta  << "vs" << thetaCollimator << endl; return ihit;}
    
  float x = dist*tan(theta)*cos(phi) + xTarget;
  float y = dist*tan(theta)*sin(phi) + yTarget;
  //float thetareal = acos(dist/ (sqrt(pow(dist,2) + pow(x,2) + pow(y,2))) );

  //Hit Beam blocker donut

  
  //search each quadrant of gobbi array
  for (int i=0;i<4;i++){
    ihit = Tele[i]->hit(x,y,dE,E);
    float r = sqrt(pow(dist,2) + pow(Tele[i]->xRecon,2) 
       + pow(Tele[i]->yRecon,2));

    xRecon = Tele[i]->xRecon;
    yRecon = Tele[i]->yRecon;
    thetaRecon = acos(dist/r);


    phiRecon = atan2(Tele[i]->yRecon, Tele[i]->xRecon);
    itele = i;
    //save the strip number that was hit
    ix = Tele[i]->ix;
    iy = Tele[i]->iy;
    
    if (ihit) break;
  }
  
  return ihit;
}

